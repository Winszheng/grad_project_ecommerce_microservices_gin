// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: product.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemID  int32 `protobuf:"varint,2,opt,name=itemID,proto3" json:"itemID,omitempty"`
	BrandID int32 `protobuf:"varint,3,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *ItemBrandRequest) Reset() {
	*x = ItemBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBrandRequest) ProtoMessage() {}

func (x *ItemBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBrandRequest.ProtoReflect.Descriptor instead.
func (*ItemBrandRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{0}
}

func (x *ItemBrandRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemBrandRequest) GetItemID() int32 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *ItemBrandRequest) GetBrandID() int32 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type ItemBrandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand    *BrandInfoResponse `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Category *ItemInfoResponse  `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *ItemBrandResponse) Reset() {
	*x = ItemBrandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBrandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBrandResponse) ProtoMessage() {}

func (x *ItemBrandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBrandResponse.ProtoReflect.Descriptor instead.
func (*ItemBrandResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{1}
}

func (x *ItemBrandResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemBrandResponse) GetBrand() *BrandInfoResponse {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *ItemBrandResponse) GetCategory() *ItemInfoResponse {
	if x != nil {
		return x.Category
	}
	return nil
}

type ItemBrandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*ItemBrandResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ItemBrandListResponse) Reset() {
	*x = ItemBrandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBrandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBrandListResponse) ProtoMessage() {}

func (x *ItemBrandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBrandListResponse.ProtoReflect.Descriptor instead.
func (*ItemBrandListResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{2}
}

func (x *ItemBrandListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ItemBrandListResponse) GetData() []*ItemBrandResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ItemBrandFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages       int32 `protobuf:"varint,1,opt,name=pages,proto3" json:"pages,omitempty"`
	PagePerNums int32 `protobuf:"varint,2,opt,name=pagePerNums,proto3" json:"pagePerNums,omitempty"`
}

func (x *ItemBrandFilterRequest) Reset() {
	*x = ItemBrandFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBrandFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBrandFilterRequest) ProtoMessage() {}

func (x *ItemBrandFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBrandFilterRequest.ProtoReflect.Descriptor instead.
func (*ItemBrandFilterRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{3}
}

func (x *ItemBrandFilterRequest) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ItemBrandFilterRequest) GetPagePerNums() int32 {
	if x != nil {
		return x.PagePerNums
	}
	return 0
}

type BrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandRequest) Reset() {
	*x = BrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandRequest) ProtoMessage() {}

func (x *BrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandRequest.ProtoReflect.Descriptor instead.
func (*BrandRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{4}
}

func (x *BrandRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandRequest) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type BrandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*BrandInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BrandListResponse) Reset() {
	*x = BrandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListResponse) ProtoMessage() {}

func (x *BrandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListResponse.ProtoReflect.Descriptor instead.
func (*BrandListResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{5}
}

func (x *BrandListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BrandListResponse) GetData() []*BrandInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type BrandFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages       int32 `protobuf:"varint,1,opt,name=pages,proto3" json:"pages,omitempty"`
	PagePerNums int32 `protobuf:"varint,2,opt,name=pagePerNums,proto3" json:"pagePerNums,omitempty"`
}

func (x *BrandFilterRequest) Reset() {
	*x = BrandFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandFilterRequest) ProtoMessage() {}

func (x *BrandFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandFilterRequest.ProtoReflect.Descriptor instead.
func (*BrandFilterRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{6}
}

func (x *BrandFilterRequest) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *BrandFilterRequest) GetPagePerNums() int32 {
	if x != nil {
		return x.PagePerNums
	}
	return 0
}

type DeleteItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteItemRequest) Reset() {
	*x = DeleteItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemRequest) ProtoMessage() {}

func (x *DeleteItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ItemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentItem int32  `protobuf:"varint,3,opt,name=parentItem,proto3" json:"parentItem,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	IsTab      bool   `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
}

func (x *ItemInfoRequest) Reset() {
	*x = ItemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfoRequest) ProtoMessage() {}

func (x *ItemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfoRequest.ProtoReflect.Descriptor instead.
func (*ItemInfoRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{8}
}

func (x *ItemInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemInfoRequest) GetParentItem() int32 {
	if x != nil {
		return x.ParentItem
	}
	return 0
}

func (x *ItemInfoRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ItemInfoRequest) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

type ItemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentItem int32  `protobuf:"varint,3,opt,name=parentItem,proto3" json:"parentItem,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	IsTab      bool   `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
}

func (x *ItemInfoResponse) Reset() {
	*x = ItemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfoResponse) ProtoMessage() {}

func (x *ItemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfoResponse.ProtoReflect.Descriptor instead.
func (*ItemInfoResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{9}
}

func (x *ItemInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemInfoResponse) GetParentItem() int32 {
	if x != nil {
		return x.ParentItem
	}
	return 0
}

func (x *ItemInfoResponse) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ItemInfoResponse) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

type SubItemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Info    *ItemInfoResponse   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	SubItem []*ItemInfoResponse `protobuf:"bytes,3,rep,name=subItem,proto3" json:"subItem,omitempty"`
}

func (x *SubItemListResponse) Reset() {
	*x = SubItemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubItemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubItemListResponse) ProtoMessage() {}

func (x *SubItemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubItemListResponse.ProtoReflect.Descriptor instead.
func (*SubItemListResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{10}
}

func (x *SubItemListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubItemListResponse) GetInfo() *ItemInfoResponse {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SubItemListResponse) GetSubItem() []*ItemInfoResponse {
	if x != nil {
		return x.SubItem
	}
	return nil
}

type ItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *ItemListRequest) Reset() {
	*x = ItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListRequest) ProtoMessage() {}

func (x *ItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListRequest.ProtoReflect.Descriptor instead.
func (*ItemListRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{11}
}

func (x *ItemListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemListRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ItemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data     []*ItemInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	JsonData string              `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *ItemListResponse) Reset() {
	*x = ItemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListResponse) ProtoMessage() {}

func (x *ItemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListResponse.ProtoReflect.Descriptor instead.
func (*ItemListResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{12}
}

func (x *ItemListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ItemListResponse) GetData() []*ItemInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ItemListResponse) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type ProductID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProductID) Reset() {
	*x = ProductID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductID) ProtoMessage() {}

func (x *ProductID) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductID.ProtoReflect.Descriptor instead.
func (*ProductID) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{13}
}

func (x *ProductID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BrandInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandInfoResponse) Reset() {
	*x = BrandInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandInfoResponse) ProtoMessage() {}

func (x *BrandInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandInfoResponse.ProtoReflect.Descriptor instead.
func (*BrandInfoResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{14}
}

func (x *BrandInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandInfoResponse) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type ProductInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemID      int32    `protobuf:"varint,2,opt,name=itemID,proto3" json:"itemID,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ArticleNum  string   `protobuf:"bytes,4,opt,name=articleNum,proto3" json:"articleNum,omitempty"` // 货号
	ClickNum    int32    `protobuf:"varint,5,opt,name=clickNum,proto3" json:"clickNum,omitempty"`
	SoldNum     int32    `protobuf:"varint,6,opt,name=soldNum,proto3" json:"soldNum,omitempty"`
	FavoriteNum int32    `protobuf:"varint,7,opt,name=favoriteNum,proto3" json:"favoriteNum,omitempty"`
	NormalPrice float32  `protobuf:"fixed32,9,opt,name=normalPrice,proto3" json:"normalPrice,omitempty"`
	ProPrice    float32  `protobuf:"fixed32,10,opt,name=proPrice,proto3" json:"proPrice,omitempty"`
	Brief       string   `protobuf:"bytes,11,opt,name=brief,proto3" json:"brief,omitempty"`
	Description string   `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	IsShipFree  bool     `protobuf:"varint,13,opt,name=isShipFree,proto3" json:"isShipFree,omitempty"`
	Images      []string `protobuf:"bytes,14,rep,name=images,proto3" json:"images,omitempty"`
	DescImages  []string `protobuf:"bytes,15,rep,name=descImages,proto3" json:"descImages,omitempty"`
	FrontImage  string   `protobuf:"bytes,16,opt,name=frontImage,proto3" json:"frontImage,omitempty"`
	IsNew       bool     `protobuf:"varint,17,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot       bool     `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale      bool     `protobuf:"varint,19,opt,name=onSale,proto3" json:"onSale,omitempty"`
	AddTime     int64    `protobuf:"varint,20,opt,name=addTime,proto3" json:"addTime,omitempty"`
	//  CategoryBriefInfoResponse category = 21; 不想要目录简介，不写了
	Brand *BrandInfoResponse `protobuf:"bytes,22,opt,name=brand,proto3" json:"brand,omitempty"`
	Item  *ItemInfoResponse  `protobuf:"bytes,23,opt,name=item,proto3" json:"item,omitempty"` // 漏写了个品牌信息字段！！绝望啊！！！改得好麻烦！！！
}

func (x *ProductInfoResponse) Reset() {
	*x = ProductInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoResponse) ProtoMessage() {}

func (x *ProductInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoResponse.ProtoReflect.Descriptor instead.
func (*ProductInfoResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{15}
}

func (x *ProductInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInfoResponse) GetItemID() int32 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *ProductInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductInfoResponse) GetArticleNum() string {
	if x != nil {
		return x.ArticleNum
	}
	return ""
}

func (x *ProductInfoResponse) GetClickNum() int32 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *ProductInfoResponse) GetSoldNum() int32 {
	if x != nil {
		return x.SoldNum
	}
	return 0
}

func (x *ProductInfoResponse) GetFavoriteNum() int32 {
	if x != nil {
		return x.FavoriteNum
	}
	return 0
}

func (x *ProductInfoResponse) GetNormalPrice() float32 {
	if x != nil {
		return x.NormalPrice
	}
	return 0
}

func (x *ProductInfoResponse) GetProPrice() float32 {
	if x != nil {
		return x.ProPrice
	}
	return 0
}

func (x *ProductInfoResponse) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *ProductInfoResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductInfoResponse) GetIsShipFree() bool {
	if x != nil {
		return x.IsShipFree
	}
	return false
}

func (x *ProductInfoResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ProductInfoResponse) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *ProductInfoResponse) GetFrontImage() string {
	if x != nil {
		return x.FrontImage
	}
	return ""
}

func (x *ProductInfoResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *ProductInfoResponse) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *ProductInfoResponse) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *ProductInfoResponse) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *ProductInfoResponse) GetBrand() *BrandInfoResponse {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *ProductInfoResponse) GetItem() *ItemInfoResponse {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ArticleNum  string   `protobuf:"bytes,3,opt,name=articleNum,proto3" json:"articleNum,omitempty"` // 货号
	Stocks      int32    `protobuf:"varint,7,opt,name=stocks,proto3" json:"stocks,omitempty"`        // 库存，
	NormalPrice float32  `protobuf:"fixed32,8,opt,name=normalPrice,proto3" json:"normalPrice,omitempty"`
	ProPrice    float32  `protobuf:"fixed32,9,opt,name=proPrice,proto3" json:"proPrice,omitempty"`
	Brief       string   `protobuf:"bytes,10,opt,name=brief,proto3" json:"brief,omitempty"`
	Description string   `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	IsShipFree  bool     `protobuf:"varint,12,opt,name=isShipFree,proto3" json:"isShipFree,omitempty"`
	Images      []string `protobuf:"bytes,13,rep,name=images,proto3" json:"images,omitempty"`
	DescImages  []string `protobuf:"bytes,14,rep,name=descImages,proto3" json:"descImages,omitempty"`
	FrontImage  string   `protobuf:"bytes,15,opt,name=frontImage,proto3" json:"frontImage,omitempty"`
	IsNew       bool     `protobuf:"varint,16,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot       bool     `protobuf:"varint,17,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsOnSale    bool     `protobuf:"varint,18,opt,name=isOnSale,proto3" json:"isOnSale,omitempty"`
	ItemID      int32    `protobuf:"varint,19,opt,name=itemID,proto3" json:"itemID,omitempty"`
	BrandID     int32    `protobuf:"varint,20,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *CreateProductInfo) Reset() {
	*x = CreateProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductInfo) ProtoMessage() {}

func (x *CreateProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductInfo.ProtoReflect.Descriptor instead.
func (*CreateProductInfo) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{16}
}

func (x *CreateProductInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductInfo) GetArticleNum() string {
	if x != nil {
		return x.ArticleNum
	}
	return ""
}

func (x *CreateProductInfo) GetStocks() int32 {
	if x != nil {
		return x.Stocks
	}
	return 0
}

func (x *CreateProductInfo) GetNormalPrice() float32 {
	if x != nil {
		return x.NormalPrice
	}
	return 0
}

func (x *CreateProductInfo) GetProPrice() float32 {
	if x != nil {
		return x.ProPrice
	}
	return 0
}

func (x *CreateProductInfo) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *CreateProductInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProductInfo) GetIsShipFree() bool {
	if x != nil {
		return x.IsShipFree
	}
	return false
}

func (x *CreateProductInfo) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateProductInfo) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *CreateProductInfo) GetFrontImage() string {
	if x != nil {
		return x.FrontImage
	}
	return ""
}

func (x *CreateProductInfo) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *CreateProductInfo) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *CreateProductInfo) GetIsOnSale() bool {
	if x != nil {
		return x.IsOnSale
	}
	return false
}

func (x *CreateProductInfo) GetItemID() int32 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *CreateProductInfo) GetBrandID() int32 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type ProductByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinPrice   int32  `protobuf:"varint,1,opt,name=minPrice,proto3" json:"minPrice,omitempty"`
	MaxPrice   int32  `protobuf:"varint,2,opt,name=maxPrice,proto3" json:"maxPrice,omitempty"`
	IsHot      bool   `protobuf:"varint,3,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsNew      bool   `protobuf:"varint,4,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsTab      bool   `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
	TopItem    int32  `protobuf:"varint,6,opt,name=topItem,proto3" json:"topItem,omitempty"`
	Page       int32  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	PagePerNum int32  `protobuf:"varint,8,opt,name=pagePerNum,proto3" json:"pagePerNum,omitempty"`
	Keyword    string `protobuf:"bytes,9,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Brand      int32  `protobuf:"varint,10,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *ProductByFilterRequest) Reset() {
	*x = ProductByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductByFilterRequest) ProtoMessage() {}

func (x *ProductByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductByFilterRequest.ProtoReflect.Descriptor instead.
func (*ProductByFilterRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{17}
}

func (x *ProductByFilterRequest) GetMinPrice() int32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *ProductByFilterRequest) GetMaxPrice() int32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *ProductByFilterRequest) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *ProductByFilterRequest) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *ProductByFilterRequest) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

func (x *ProductByFilterRequest) GetTopItem() int32 {
	if x != nil {
		return x.TopItem
	}
	return 0
}

func (x *ProductByFilterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductByFilterRequest) GetPagePerNum() int32 {
	if x != nil {
		return x.PagePerNum
	}
	return 0
}

func (x *ProductByFilterRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ProductByFilterRequest) GetBrand() int32 {
	if x != nil {
		return x.Brand
	}
	return 0
}

type ProductByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*ProductInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductByFilterResponse) Reset() {
	*x = ProductByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductByFilterResponse) ProtoMessage() {}

func (x *ProductByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductByFilterResponse.ProtoReflect.Descriptor instead.
func (*ProductByFilterResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{18}
}

func (x *ProductByFilterResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductByFilterResponse) GetData() []*ProductInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductQuantityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *ProductQuantityRequest) Reset() {
	*x = ProductQuantityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQuantityRequest) ProtoMessage() {}

func (x *ProductQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQuantityRequest.ProtoReflect.Descriptor instead.
func (*ProductQuantityRequest) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{19}
}

func (x *ProductQuantityRequest) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type ProductQuantityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*ProductInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductQuantityResponse) Reset() {
	*x = ProductQuantityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQuantityResponse) ProtoMessage() {}

func (x *ProductQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQuantityResponse.ProtoReflect.Descriptor instead.
func (*ProductQuantityResponse) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{20}
}

func (x *ProductQuantityResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductQuantityResponse) GetData() []*ProductInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_product_proto protoreflect.FileDescriptor

var file_product_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x10,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x44, 0x22, 0x7c, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x55, 0x0a, 0x15, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x16, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x0c, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x22, 0x51, 0x0a, 0x11, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x12, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x22, 0x82, 0x01, 0x0a, 0x10,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x54, 0x61, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62,
	0x22, 0x7f, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65,
	0x6d, 0x22, 0x37, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x6b, 0x0a, 0x10, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x22, 0xe6, 0x04, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x46,
	0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xd7, 0x03, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x46, 0x72,
	0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x53, 0x61,
	0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x53, 0x61,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x44, 0x22, 0x90, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x28, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd5, 0x09, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x17, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0a,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x10, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x36, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0d, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x10, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x3c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_product_proto_rawDescOnce sync.Once
	file_product_proto_rawDescData = file_product_proto_rawDesc
)

func file_product_proto_rawDescGZIP() []byte {
	file_product_proto_rawDescOnce.Do(func() {
		file_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_proto_rawDescData)
	})
	return file_product_proto_rawDescData
}

var file_product_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_product_proto_goTypes = []interface{}{
	(*ItemBrandRequest)(nil),        // 0: ItemBrandRequest
	(*ItemBrandResponse)(nil),       // 1: ItemBrandResponse
	(*ItemBrandListResponse)(nil),   // 2: ItemBrandListResponse
	(*ItemBrandFilterRequest)(nil),  // 3: ItemBrandFilterRequest
	(*BrandRequest)(nil),            // 4: BrandRequest
	(*BrandListResponse)(nil),       // 5: BrandListResponse
	(*BrandFilterRequest)(nil),      // 6: BrandFilterRequest
	(*DeleteItemRequest)(nil),       // 7: DeleteItemRequest
	(*ItemInfoRequest)(nil),         // 8: ItemInfoRequest
	(*ItemInfoResponse)(nil),        // 9: ItemInfoResponse
	(*SubItemListResponse)(nil),     // 10: SubItemListResponse
	(*ItemListRequest)(nil),         // 11: ItemListRequest
	(*ItemListResponse)(nil),        // 12: ItemListResponse
	(*ProductID)(nil),               // 13: ProductID
	(*BrandInfoResponse)(nil),       // 14: BrandInfoResponse
	(*ProductInfoResponse)(nil),     // 15: ProductInfoResponse
	(*CreateProductInfo)(nil),       // 16: CreateProductInfo
	(*ProductByFilterRequest)(nil),  // 17: ProductByFilterRequest
	(*ProductByFilterResponse)(nil), // 18: ProductByFilterResponse
	(*ProductQuantityRequest)(nil),  // 19: ProductQuantityRequest
	(*ProductQuantityResponse)(nil), // 20: ProductQuantityResponse
	(*emptypb.Empty)(nil),           // 21: google.protobuf.Empty
}
var file_product_proto_depIdxs = []int32{
	14, // 0: ItemBrandResponse.brand:type_name -> BrandInfoResponse
	9,  // 1: ItemBrandResponse.category:type_name -> ItemInfoResponse
	1,  // 2: ItemBrandListResponse.data:type_name -> ItemBrandResponse
	14, // 3: BrandListResponse.data:type_name -> BrandInfoResponse
	9,  // 4: SubItemListResponse.info:type_name -> ItemInfoResponse
	9,  // 5: SubItemListResponse.subItem:type_name -> ItemInfoResponse
	9,  // 6: ItemListResponse.data:type_name -> ItemInfoResponse
	14, // 7: ProductInfoResponse.brand:type_name -> BrandInfoResponse
	9,  // 8: ProductInfoResponse.item:type_name -> ItemInfoResponse
	15, // 9: ProductByFilterResponse.data:type_name -> ProductInfoResponse
	15, // 10: ProductQuantityResponse.data:type_name -> ProductInfoResponse
	17, // 11: Product.GetProductByFilter:input_type -> ProductByFilterRequest
	19, // 12: Product.GetProductQuantity:input_type -> ProductQuantityRequest
	16, // 13: Product.CreateProduct:input_type -> CreateProductInfo
	13, // 14: Product.DeleteProductByID:input_type -> ProductID
	16, // 15: Product.UpdateProduct:input_type -> CreateProductInfo
	13, // 16: Product.GetProductDetailByID:input_type -> ProductID
	21, // 17: Product.GetAllItemList:input_type -> google.protobuf.Empty
	11, // 18: Product.GetSubItem:input_type -> ItemListRequest
	8,  // 19: Product.CreateItem:input_type -> ItemInfoRequest
	7,  // 20: Product.DeleteItem:input_type -> DeleteItemRequest
	8,  // 21: Product.UpdateItem:input_type -> ItemInfoRequest
	6,  // 22: Product.BrandList:input_type -> BrandFilterRequest
	4,  // 23: Product.GetBrand:input_type -> BrandRequest
	4,  // 24: Product.CreateBrand:input_type -> BrandRequest
	4,  // 25: Product.DeleteBrand:input_type -> BrandRequest
	4,  // 26: Product.UpdateBrand:input_type -> BrandRequest
	3,  // 27: Product.ItemBrandList:input_type -> ItemBrandFilterRequest
	8,  // 28: Product.GetBrandListByItem:input_type -> ItemInfoRequest
	0,  // 29: Product.CreateItemBrand:input_type -> ItemBrandRequest
	0,  // 30: Product.DeleteItemBrand:input_type -> ItemBrandRequest
	0,  // 31: Product.UpdateItemBrand:input_type -> ItemBrandRequest
	18, // 32: Product.GetProductByFilter:output_type -> ProductByFilterResponse
	20, // 33: Product.GetProductQuantity:output_type -> ProductQuantityResponse
	15, // 34: Product.CreateProduct:output_type -> ProductInfoResponse
	21, // 35: Product.DeleteProductByID:output_type -> google.protobuf.Empty
	21, // 36: Product.UpdateProduct:output_type -> google.protobuf.Empty
	15, // 37: Product.GetProductDetailByID:output_type -> ProductInfoResponse
	12, // 38: Product.GetAllItemList:output_type -> ItemListResponse
	10, // 39: Product.GetSubItem:output_type -> SubItemListResponse
	9,  // 40: Product.CreateItem:output_type -> ItemInfoResponse
	21, // 41: Product.DeleteItem:output_type -> google.protobuf.Empty
	21, // 42: Product.UpdateItem:output_type -> google.protobuf.Empty
	5,  // 43: Product.BrandList:output_type -> BrandListResponse
	14, // 44: Product.GetBrand:output_type -> BrandInfoResponse
	14, // 45: Product.CreateBrand:output_type -> BrandInfoResponse
	21, // 46: Product.DeleteBrand:output_type -> google.protobuf.Empty
	21, // 47: Product.UpdateBrand:output_type -> google.protobuf.Empty
	2,  // 48: Product.ItemBrandList:output_type -> ItemBrandListResponse
	5,  // 49: Product.GetBrandListByItem:output_type -> BrandListResponse
	1,  // 50: Product.CreateItemBrand:output_type -> ItemBrandResponse
	21, // 51: Product.DeleteItemBrand:output_type -> google.protobuf.Empty
	21, // 52: Product.UpdateItemBrand:output_type -> google.protobuf.Empty
	32, // [32:53] is the sub-list for method output_type
	11, // [11:32] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_product_proto_init() }
func file_product_proto_init() {
	if File_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBrandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBrandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBrandFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubItemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQuantityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQuantityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_proto_goTypes,
		DependencyIndexes: file_product_proto_depIdxs,
		MessageInfos:      file_product_proto_msgTypes,
	}.Build()
	File_product_proto = out.File
	file_product_proto_rawDesc = nil
	file_product_proto_goTypes = nil
	file_product_proto_depIdxs = nil
}
